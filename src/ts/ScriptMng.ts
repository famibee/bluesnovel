/* ***** BEGIN LICENSE BLOCK *****
	Copyright (c) 2024-2025 Famibee (famibee.blog38.fc2.com)

	This software is released under the MIT License.
	http://opensource.org/licenses/mit-license.php
** ***** END LICENSE BLOCK ***** */

import type {SysBase} from './SysBase';
import {type HArg, type IHTag, splitAmpersand, tagToken2Name, tagToken2Name_Args} from './Grammar';
import type {T_LAY} from '../components/Stage';
import type {T_CHGPIC, T_CHGSTR, T_INIT_FNCS} from '../store/store';
import {CmnLib} from './CmnLib';
import {ScriptIterator} from './ScriptIterator';
import {AnalyzeTagArg} from './AnalyzeTagArg';
import {CallStack} from './CallStack';
import type {Variable} from './Variable';
import type {PropParser} from './PropParser';
import type {Scope} from './CmnInterface';

type T_TRACE = (txt: string, lvl?: 'D'|'W'|'F'|'E'|'I'|'ET')=> void;


export class ScriptMng {
	readonly	#spnDbg	: HTMLSpanElement;
	readonly	#scrItr	: ScriptIterator;

	#setVal_Nochk = (_scope: Scope, _nm: string, _val: any, _autocast = false)=> {}
	#getValAmpersand	= (_v: string)=> '';
	#parse				= (_s: string): any => {};

	#isBreak = (_token: string)=> false;	//TODO: 

	constructor(
		private readonly sys	: SysBase,
		private readonly hTag	: IHTag,
		private readonly trgNext: ()=> void,
		private readonly fncs	: T_INIT_FNCS,
				readonly val	: Variable,
				readonly prpPrs	: PropParser,
	) {
		this.#spnDbg = document.createElement('span');
		this.#spnDbg.hidden = true;
		this.#spnDbg.textContent = '';
		this.#spnDbg.style.cssText = `
			z-index: ${Number.MAX_SAFE_INTEGER};
			position: absolute; left: 0; top: 0;
			color: black;
			background-color: rgba(255, 255, 255, 0.7);`
		document.body.appendChild(this.#spnDbg);

		this.#scrItr = new ScriptIterator(sys);

		this.#setVal_Nochk = (scope, nm, v, autocast)=> val.setVal_Nochk(scope, nm, v, autocast);
		this.#getValAmpersand = v=> prpPrs.getValAmpersand(v);
		this.#parse = s=> prpPrs.parse(s);

		hTag.trace		= o=> this.#trace(o);			// „Éá„Éê„ÉÉ„Ç∞Ë°®Á§∫„Å∏Âá∫Âäõ
	}


	async load(fn: string) {
		//NOTE: Âêå„Åòidx„ÅÆÊõ¥Êñ∞„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åã

		//TODO: „Çπ„ÇØ„É™„Éó„ÉàËß£Êûê„É´„Éº„Éó„ÉªÈñãÂßã
		//TODO: [l][p][s][wait]„Åß„ÅÆÁä∂ÊÖã„Çí‰øùÂ≠ò

		//TODO: resumeByJumpOrCall
		this.#setVal_Nochk('tmp', 'sn.eventArg', /*hArg.arg ??*/ '');
		this.#setVal_Nochk('tmp', 'sn.eventLabel', /*hArg.label ??*/ '');

		const gen = await this.#scrItr.load(fn);
		while (true) {
			const {done, value} = gen.next();
			if (done) {this.myTrace('üéç „Çπ„ÇØ„É™„Éó„ÉàÊú´Â∞æ', 'E'); break}
			this.#scrItr.addIdxToken();

			let token = value;
// console.log(`fn:ScriptMng.ts üçâ %o`, token);
			switch (value.charAt(0)) {
				case '\t':	continue;	//  „Çø„Éñ

				case '\n':	// ÊîπË°å
					this.#scrItr.addLineNum(token.length);	continue;

				case '[':	// „Çø„Ç∞ÈñãÂßã
console.log(`fn:ScriptMng.ts üçä TAG ${token}`);
					if (this.#isBreak(token)) return;
					try {
						const cl = (token.match(/\n/g) ?? []).length;
						if (cl > 0) this.#scrItr.addLineNum(cl);
						// if (this.#scrItr.„Çø„Ç∞Ëß£Êûê(token)) {this.stop(); return}	//TODO: 
					}
					catch (e) {
						if (e instanceof Error) this.myTrace(`[${tagToken2Name(token)}]„Çø„Ç∞Ëß£Êûê‰∏≠‰æãÂ§ñ mes=${e.message}(${e.name})`);
						else this.myTrace(String(e));
						return;
					}
					continue;

				case '&':	//  Â§âÊï∞Êìç‰Ωú„ÉªÂ§âÊï∞Ë°®Á§∫
					try {
						if (! value.endsWith('&')) {	//Â§âÊï∞Êìç‰Ωú
							// Â§âÊï∞Ë®àÁÆó
							if (this.#isBreak(token)) return;
							const o = splitAmpersand(token.slice(1));
							o.name = this.#getValAmpersand(o.name);
							o.text = String(this.#parse(o.text));
							this.hTag.let!(o);
							continue;
						}

						if (value.charAt(1) === '&') throw new Error('„Äå&Ë°®Á§∫&„ÄçÊõ∏Âºè„Åß„ÅØ„Äå&„ÄçÊåáÂÆö„Åå‰∏çË¶Å„Åß„Åô');
						// token = String(this.#parse( token.slice(1, -1) ));	//TODO: 
					}
					catch (err) {
						this.myTrace(
							err instanceof Error
								? `& Â§âÊï∞Êìç‰Ωú„ÉªË°®Á§∫ mes=${err.message}(${err.name})`
								: String(err)
						);
						return;
					}
					break;

				case ';':	continue;	// „Ç≥„É°„É≥„Éà

				case '*':		//  „É©„Éô„É´
					if (value.length > 1) continue;
					break;
			}

			//TODO: ÊñáÂ≠óË°®Á§∫
			try {
				// this.#layMng.setNormalChWait();	//TODO: 
				// const tl = this.#layMng.currentTxtlayForeNeedErr;
				// tl.tagCh(token);
console.log(`fn:ScriptMng.ts üçà tagCh:${token}`);
			}
			catch (err) {
				this.myTrace(
					err instanceof Error
						? `ÊñáÂ≠óË°®Á§∫ mes=${err.message}(${err.name})`
						: String(err)
				);
				return;
			}
		}



		function* gene1(): Generator<T_LAY | T_CHGPIC | T_CHGSTR> {
			yield {cls: 'GRP', nm: 'base', fn: 'yun_1184'};
			yield {cls: 'TXT', nm: 'mes', str: '„ÅÇ„ÅÑ„ÅÜ„Åà„Åä'};
			yield {nm: 'mes', str: '„Åã„Åç„Åè„Åë„Åì'};
			yield {cls: 'GRP', nm: 'fg0', fn: 'F_1024a'};
			yield {nm: 'base', fn: 'yun_1317'};
		}
		const gen1 = gene1();
		let idxDummy = 0;
		this.go = ()=> {
console.log(`fn:ScriptMng.ts == go ==`);
			while (true) {
				const {done, value: o} = gen1.next();
				if (done) break;
	
				this.sys.caretaker.push(fn +':'+ ++idxDummy);
				if ('cls' in o) this.fncs.addLayer(o); else
				if ('fn' in o) this.fncs.chgPic(o); else this.fncs.chgStr(o);
				break;
			}
		};

		this.trgNext();
	}

	go() {}


	// result = true : wait„Åô„Çã  resume()„ÅßÂÜçÈñã
	#procDebugtag	= (_tag_name: string)=> {};
	//MARK: „Çø„Ç∞Ëß£Êûê
	„Çø„Ç∞Ëß£Êûê(tagToken: string): boolean {
		const [tag_name, args] = tagToken2Name_Args(tagToken);
		const tag_fnc = this.hTag[tag_name];
		if (! tag_fnc) throw `Êú™ÂÆöÁæ©„ÅÆ„Çø„Ç∞„Äê${tag_name}„Äë„Åß„Åô`;

		this.#alzTagArg.parse(args);
		this.#procDebugtag(tag_name);

		const hPrm = this.#alzTagArg.hPrm;
		if (hPrm.cond) {
			const cond = hPrm.cond.val;
			if (! cond || cond.startsWith('&')) throw 'Â±ûÊÄßcond„ÅØ„Äå&„Äç„Åå‰∏çË¶Å„Åß„Åô';
			// const p = this.prpPrs.parse(cond);
			// const ps = String(p);
			// if (ps === 'null' || ps === 'undefined') return false;
			// if (! p) return false;
		}

		let hArg: any = {};
		const len = this.#aCallStk.length;
		const csa: any = len === 0 ?{} :this.#aCallStk[len -1]!.csArg;
		if (this.#alzTagArg.isKomeParam) {
			if (len === 0) throw 'Â±ûÊÄß„Äå*„Äç„ÅØ„Éû„ÇØ„É≠„ÅÆ„ÅøÊúâÂäπ„Åß„Åô';
			hArg = {...csa};
		}
		hArg[':„Çø„Ç∞Âêç'] = tag_name;
	// #region „Çø„Ç∞‰ΩçÁΩÆ„ÅÆ„Ç≥„Éº„É´„Çπ„Çø„ÉÉ„ÇØÊÉÖÂ†±„ÇíÂüã„ÇÅËæº„ÇÄ„Ç≥„Éº„ÉâÔºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
	/*	{
			const lc0 = this.#cnvIdx2lineCol(this.#script, this.#idxToken);
			let now = `Â≠òÂú®‰ΩçÁΩÆ fn:${this.#scriptFn} line:${lc0.ln} col:${lc0.col_s +1}`;
			hArg[':path'] = now;
			const len = this.#aCallStk.length;
			if (len > 0) {
				for (let i=len -1; i>=0; --i) {
					const cs = this.#aCallStk[i];
					const hMp = cs.csArg[':hMp'];
					const from_macro_nm = hMp ?hMp[':„Çø„Ç∞Âêç'] :undefined;
					const call_nm = cs.csArg[':„Çø„Ç∞Âêç'] ?? '';
					const lc = this.#cnvIdx2lineCol(this.#hScript[cs.fn], cs.idx);
					now += ` <- (${len -i}) fn:${cs.fn} line:${lc.ln
						} col:${lc.col_s +1
						}`+ (from_macro_nm ?'Ôºà['+ from_macro_nm +']„Éû„ÇØ„É≠ÂÜÖÔºâ' :' ')+
						`„Åß [${call_nm} ...]„Çí„Ç≥„Éº„É´`;
				}
			}
		}*/
	// #endregion
	// #region „Çø„Ç∞‰ΩçÁΩÆÊÉÖÂ†±„ÇíÂüã„ÇÅËæº„ÇÄ„Ç≥„Éº„ÉâÔºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
//		hArg[':path'] = this.#scriptFn;
//		hArg[':ln'] = this.#lineNum;
	// #endregion
		// val„ÇÑdef„ÅÆÂÄ§„Å´„Å§„ÅÑ„Å¶„ÄÇnull „ÅØ„ÅÇ„Çä„Åà„Å™„ÅÑ„ÄÇ'null'„ÇÑ'undefined' „ÅØ„ÅÇ„Çä„Åà„Çã„ÄÇ
		// ÁúÅÁï•ÊôÇ‰ª•Â§ñ„Åß undefined „ÅØ„Å™„ÅÑ„ÄÇa=undefined „Å®Êõ∏„ÅÑ„Å¶„ÇÇ 'undefined' „Å´„Å™„Çã
		for (const [arg_nm, {val, def}] of Object.entries(hPrm)) {
			let v = val;
			if (v?.startsWith('%')) {
				if (len === 0) throw 'Â±ûÊÄß„Äå%„Äç„ÅØ„Éû„ÇØ„É≠ÂÆöÁæ©ÂÜÖ„Åß„ÅÆ„Åø‰ΩøÁî®„Åß„Åç„Åæ„ÅôÔºà„Åù„ÅÆ„Éû„ÇØ„É≠„ÅÆÂºïÊï∞„ÇíÁ§∫„ÅôÁ∞°Áï•ÊñáÊ≥ï„Åß„ÅÇ„Çã„Åü„ÇÅÔºâ';
				const mac = csa[v.slice(1)];
				if (mac) {hArg[arg_nm] = mac; continue}

				if (def === undefined || def === 'null') continue;
					// def„ÅÆ'null'ÊåáÂÆö„ÄÇ%Â§âÊï∞„ÅåÁÑ°„ÅÑÂ†¥Âêà„ÄÅ„Çø„Ç∞„ÇÑ„Éû„ÇØ„É≠„Å´Â±ûÊÄß„ÇíÊ∏°„Åï„Å™„ÅÑ
				v = def;
			}

			// v = this.prpPrs.getValAmpersand(v ?? '');
			// if (v !== 'undefined') {hArg[arg_nm] = v; continue}

			// if (def === undefined) continue;
			// v = this.prpPrs.getValAmpersand(def);
			// if (v !== 'undefined') hArg[arg_nm] = v;
			// 	// Â≠òÂú®„Åó„Å™„ÅÑÂÄ§„ÅÆÂ†¥Âêà„ÄÅÂ±ûÊÄß„ÇíÊ∏°„Åï„Å™„ÅÑ
		}

		return tag_fnc(hArg);
	}
		readonly	#alzTagArg	= new AnalyzeTagArg;
		#aCallStk	: CallStack[]	= [];	// FILO„Éê„ÉÉ„Éï„Ç°Ôºàpush/popÔºâ


	#trace(hArg: HArg) {
		this.myTrace(hArg.text || `(text is ${hArg.text})`, 'I');

		return false;
	}
	readonly	myTrace: T_TRACE = (txt, lvl = 'E')=> {
		let sty = '';
		switch (lvl) {
			case 'D':	sty = 'color:#05A;';	break;
			case 'W':	sty = 'color:#F80;';	break;
			case 'F':	sty = 'color:#B00;';	break;
			case 'ET':
			case 'E':	sty = 'color:#F30;';	break;
			default:	sty = '';
		}

		const mes = `{${lvl}} `+ this.#scrItr.strPos() + txt;
		this.#spnDbg.innerHTML += `<span style='${sty}'>${mes}</span><br/>`;
		this.#spnDbg.hidden = false;

		switch (lvl) {
			case 'D':	if (CmnLib.isDarkMode) sty = `color:#49F;`;	break;
			case 'W':
			case 'F':	break;
			case 'ET':
			case 'E':
				this.hTag.title!({text: txt});
				/*if (CmnLib.osName === "AND") {
					const buf = "mailto:foo@hoge.co.jp"
						+ "?subject=AIRNovel_ERR&body="
						+ CmnLib.escapeZenkaku(mes) + "\n"
						+ "‚Äª‰∏ÄÈÉ®Ë®òÂè∑„ÅØÂÖ®ËßíË°®Á§∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ";
					flash.net.navigateToURL(new URLRequest(buf));
				}*/
				// this.#hTag.dump_lay!({});	//TODO: 
				// this.#hTag.dump_val!({});	//TODO: 
				this.#scrItr.dumpErrForeLine();
				// this.#hTag.dump_stack!({});	//TODO: 

				if (lvl === 'ET') throw mes;
				break;
			default:	sty = '';
		}
		console.info('%c '+ mes, sty);
	}

}
